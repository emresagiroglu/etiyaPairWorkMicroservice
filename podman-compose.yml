services:
  configserver:
   image: configserverimage
   build: ./configserver
   restart: always
   container_name: congfigserver
   ports:
    - 8001:8001
   networks:
     - common

  eureka:
   image: localhost/eureka
   build: ./eureka
   container_name: eurekaserver
   ports:
    - 8888:8888
   depends_on:
    - configserver
   environment:
    - SPRING_PROFILES_ACTIVE=docker
   networks:
     - common
  gateway:
   image: "localhost/gateway"
   build: ./gatewayservice
   ports:
     - "8090:8090"
   networks:
     - common
   environment:
     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8888/eureka/
     - SPRING_PROFILES_ACTIVE=docker
   depends_on:
     - eureka
   #entrypoint: ["./wait-for-it.sh","eureka:8888","--timeout=60","--","java","jar","gateway.jar"]
   #healtcheck arastir!
  customerservice:
    image: "localhost/customerservice"
    build : ./customerservice
    ports:
      - 8081:8081
    networks:
      - common
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka
      - configserver
  identityservice:
    image: "localhost/identityservice"
    build: ./identityservice
    ports:
      - 8083:8083
    networks:
      - common
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka
      - configserver


  catalogservice:
    image: "localhost/catalogservice"
    build: ./catalogservice
    ports:
      - "8086:8086"
    networks:
      - common
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka
      - configserver

  orderservice:
    image: "localhost/orderservice"
    build : ./orderservice
    ports:
      - 8082:8082
    networks:
      - common
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka
      - configserver
  searchservice:
    image: "localhost/searchservice"
    build: ./searchservice
    ports:
      - 8085:8085
    networks:
      - common
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka
      - configserver
  mysql:
   image: docker.io/library/mysql:latest
   container_name: mysql
   environment:
     MYSQL_ROOT_PASSWORD: test
     MYSQL_DATABASE: customer_db
     MYSQL_USER: my_user
     MYSQL_PASSWORD: test
   ports:
     - "3306:3306"
   volumes:
     - mysql_data:/var/lib/mysql
   networks:
     - common

  postgresql:
   image: postgres:16.0
   environment:
     POSTGRES_DB: postgres
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: test
   volumes:
     - postgres_data:/var/lib/postgresql/data
   ports:
     - "5432:5432"
   networks:
     - common
  cartservice:
    image: "localhost/cartservice"
    build: ./cartservice
    ports:
      - 8084:8084
    networks:
      - common
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - eureka
      - configserver
      - redis
  redis:
    image: redis:latest  # Redis'in en son sürümünü kullanır
    container_name: redis  # Konteynerin adı
    ports:
      - "6379:6379"  # Redis varsayılan portunu dış dünyaya açar
    volumes:
      - redis-data:/data  # Redis verilerini kalıcı hale getirir
    networks:
      - common
  mongo:
    image: mongo
    container_name: mongo
    networks:
      - common
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - common
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
    networks:
      - common

volumes:
  mysql_data:
  postgres_data:
  mongodb_data:
  redis-data:

networks:
  common:
    driver: bridge
